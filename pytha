from manim import *

class PythagoreanTheorem(Scene):
    def construct(self):
        # Scene 1: Introduction
        title = Text("Pythagorean Theorem", font="Arial", color=WHITE).scale(1.2)
        formula = Tex(r"a^2 + b^2 = c^2", font_size=64, color=WHITE)
        formula.next_to(title, DOWN)

        self.play(FadeIn(title, shift=UP), FadeIn(formula, shift=DOWN))
        self.wait(2)
        self.play(FadeOut(title))
        
        # Scene 2: Introduction of the Right Triangle
        triangle = Polygon(
            ORIGIN, 
            RIGHT * 4, 
            UP * 3, 
            color=WHITE
        ).shift(LEFT * 2)
        
        label_a = MathTex("a", color=WHITE).next_to(triangle.get_critical_point(DOWN + LEFT), DOWN)
        label_b = MathTex("b", color=WHITE).next_to(triangle.get_critical_point(UP + LEFT), LEFT)
        label_c = MathTex("c", color=WHITE).next_to(triangle.get_critical_point(RIGHT + UP), RIGHT)
        
        formula.to_corner(UP + RIGHT)

        self.play(Write(triangle))
        self.play(Write(label_a), Write(label_b), Write(label_c))
        self.play(FadeIn(formula))
        self.wait(2)
        
        # Scene 3: Visualizing the Squares on the Sides
        square_a = Square(side_length=4, color=WHITE, fill_opacity=0.3).next_to(triangle, DOWN, buff=0)
        square_b = Square(side_length=3, color=WHITE, fill_opacity=0.3).next_to(triangle, LEFT, buff=0)
        square_c = Square(side_length=5, color=WHITE, fill_opacity=0.3).next_to(triangle, RIGHT, buff=0)

        label_a_sq = MathTex("a^2", color=WHITE).move_to(square_a)
        label_b_sq = MathTex("b^2", color=WHITE).move_to(square_b)
        label_c_sq = MathTex("c^2", color=WHITE).move_to(square_c)
        
        self.play(Write(square_a), Write(label_a_sq))
        self.play(Write(square_b), Write(label_b_sq))
        self.play(Write(square_c), Write(label_c_sq))
        self.wait(2)

        # Scene 4: Deriving the Theorem
        self.play(Indicate(label_a_sq, scale_factor=1.2), Indicate(label_b_sq, scale_factor=1.2))
        self.play(Indicate(label_c_sq, scale_factor=1.2))

        plus_sign = MathTex("+", color=WHITE).move_to(square_b.get_right() + 0.5 * RIGHT)
        equals_sign = MathTex("=", color=WHITE).move_to(square_c.get_left() + 0.5 * LEFT)

        self.play(Write(plus_sign))
        self.play(Write(equals_sign))

        self.play(ApplyMethod(label_a_sq.copy().next_to, label_b_sq, RIGHT))
        self.play(ApplyMethod(label_b_sq.copy().next_to, plus_sign, RIGHT))
        self.play(ApplyMethod(label_c_sq.copy().next_to, equals_sign, RIGHT))
        
        # Highlighting the equality
        self.play(Indicate(formula, scale_factor=1.2))
        self.wait(2)

        # Scene 5: Conclusion
        self.play(FadeOut(square_a), FadeOut(square_b), FadeOut(square_c),
                  FadeOut(label_a_sq), FadeOut(label_b_sq), FadeOut(label_c_sq))
        self.play(FadeOut(plus_sign), FadeOut(equals_sign))
        self.play(FadeOut(label_a), FadeOut(label_b), FadeOut(label_c))
        self.play(FadeIn(triangle), formula.animate.to_corner(DOWN + RIGHT))

        conclusion_text = Text("Pythagorean Theorem", font="Arial", color=WHITE).scale(1.2).to_edge(UP)

        self.play(FadeIn(conclusion_text))
        self.wait(2)
        self.play(FadeOut(conclusion_text), FadeOut(triangle), FadeOut(formula))
